#!/usr/bin/env php
<?php
//	License for all code of this FreePBX module can be found in the license file inside the module directory
//	Copyright 2013 Schmooze Com Inc.
//

// Bootstrap FreePBX but don't include any modules (so you won't get anything
// from the functions.inc.php files of all the modules.)
//
$restrict_mods = true;
include '/etc/freepbx.conf';
set_time_limit(0);
error_reporting(0);

// Connect to AGI:
//
require_once "phpagi.php";
$AGI = new AGI();
$AGI->answer();

$cid = $AGI->parse_callerid();


// Import Global Function Wake-Up Call
require_once "wakeglobal.php";
$hotelwakeup = \FreePBX::Hotelwakeup();
$config = $hotelwakeup->getSetting();

usleep(500);
sim_playback($AGI, getMessage("welcome"));

if($config['operator_mode'])
{
	if(in_array($cid['username'], $config['operator_extensions']))
	{
		$number = sim_background($AGI, getMessage("operatorSelectExt"), "0123456789", $config['extensionlength']);

		//TODO: check if the extension exists
		if(empty($number) || strlen($number) > $config['extensionlength'])
		{
			sim_playback($AGI, getMessage("goodbye"));
			$AGI->hangup();
		}

		$params = array(
			"number" => $number,
		);
		sim_playback($AGI, getMessage("operatorEntered", $params));
		wakeupMenu($AGI, $number);
		return;
	}
}

//TODO: needs to use AMPUSER through macro-caller-id
wakeupMenu($AGI, $cid['username']);


/**
 * The WakeUp Administration Menu
 * @param  object $AGI    AGI Object
 * @param  string $number The "number" to work with
 */
function wakeupMenu($AGI, $number)
{
	$digit = sim_background($AGI, getMessage("wakeupMenu"), "0123456789", 1);
	switch($digit)
	{
		case 1:
			wakeupAdd($AGI, $number);
			break;

		case 2:
			wakeupList($AGI, $number);
			break;
		
		default:
			sim_playback($AGI, getMessage("optionInvalid"));
			wakeupMenu($AGI, $number);
			break;
	}
}

/**
 * Add a wakeup menu
 * @param  object $AGI    The AGI object
 * @param  string $number The "number" to work with
 */
function wakeupAdd($AGI, $number, $retry = 0)
{
	global $hotelwakeup;

	$time = sim_background($AGI, getMessage("wakeupAdd"), "0123456789", 3);
	if(strlen($time) > 1)
	{
		$last = '';
		if(strlen($time) < 4)
		{
			$ret = $AGI->wait_for_digit(1000);
			if ($ret['result'] > 0)
			{
				$last = chr($ret['result']);
				$last = $last != '#' ? $last : '';
			}
		}
		$times = (string)($time.$last);
		$time = (int)($time.$last);
	}
	$times = trim($times);
	$type = (strlen($times) == 4) ? 24 : 12;

	$needRetrying = false;
	if (trim($times) == "")
	{
		$needRetrying = true;
	}
	elseif($time > 2400 || $time < 0)
	{
		$needRetrying = true;
		sim_playback($AGI, getMessage("optionInvalid"));
	}

	switch($type)
	{
		case 12:
			$td = sim_background($AGI, getMessage("wakeupAddType12H"), "0123456789", 1);
			switch($td)
			{
				case 1:
					if($time > 1159) { $time -= 1200; }
				break;
				
				case 2:
					if($time < 1159) { $time += 1200; }
				break;

				default:
					$needRetrying = true;
					sim_playback($AGI, getMessage("optionInvalid"));
				break;
			}
		break;
		case 24:
		break;
	}


	if ($needRetrying)
	{
		$retry += 1;
		if ($retry >= 3)
		{
			wakeupMenu($AGI, $number, $retry);
		}
		else
		{
			wakeupAdd($AGI, $number, $retry);
		}
		return;
	}

	$time_wakeup = hotelwakeup_convert_time($time);
	if($time_wakeup === false)
	{
		sim_playback($AGI, getMessage("error"));
		$AGI->hangup();
		return false;
	}

	$time_now = time();
	if ($time_wakeup <= $time_now)
	{
		$time_wakeup += 86400; // Add One Day on
	}

	$hotelwakeup->addWakeup($number, $time_wakeup, $AGI->request['agi_language']);
	
	$param = array("time" => $time_wakeup);
	sim_playback($AGI, getMessage("wakeupAddOk", $param));

	wakeupMenu($AGI, $number);
}

/**
 * List all wakeup calls for said number
 * @param  object $AGI    The AGI Object
 * @param  string $number the "number" to work with
 */
function wakeupList($AGI, $number)
{
	global $hotelwakeup;
	$calls = $hotelwakeup->getAllWakeup($number);

	$param = array(
		"count" => count($calls)
	);
	sim_playback($AGI, getMessage($param['count'] == 0 ? "wakeupListEmpty" : "wakeupList", $param));

	foreach($calls as $id => $call) 
	{
		$param = array(
			"number" => $id + 1,
			"time" 	 => $call['timestamp'],
		);
		sim_playback($AGI, getMessage("wakeupListInfoCall", $param));

		$digit = sim_background($AGI, getMessage("wakeupListMenu"), "0123456789", 1);
		switch($digit)
		{
			case 1:
				$hotelwakeup->removeWakeup($call['filename']);
				sim_playback($AGI, getMessage("wakeupListCancelCall"));
				wakeupList($AGI, $number);
				return;
			break;

			case 2:
				//Next
				break;

			case 3:
				wakeupMenu($AGI, $number);
				return;
			break;

			default:
				sim_playback($AGI, getMessage("optionInvalid"));
				wakeupList($AGI, $number);
				return;
			break;
		}
	}
	wakeupMenu($AGI, $number);
}

function hotelwakeup_convert_time($time)
{
	$w = getdate();
	$time = trim($time);
	switch(strlen($time))
	{
		case 4: //0130
			$time_wakeup = mktime( substr( $time, 0, 2 ), substr( $time, 2, 2 ), 0, $w['mon'], $w['mday'], $w['year'] );
			break;

		case 3: //130
			$time_wakeup = mktime( substr( $time, 0, 1 ), substr( $time, 1, 2 ), 0, $w['mon'], $w['mday'], $w['year'] );
			break;

		case 2:	//30. EG 0030
		case 1:	//5.  EG 0005
			$time_wakeup = mktime( 0, $time, 0, $w['mon'], $w['mday'], $w['year'] );
			break;

		default:
			$time_wakeup = false;
			break;
	}
	return $time_wakeup;
}
